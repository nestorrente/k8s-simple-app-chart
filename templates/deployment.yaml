apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  {{- if eq (.Values.deployment.replicas | int) 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
  {{- end }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
      serving: "true"
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        serving: "true"
    spec:
      {{- if .Values.deployment.imagePullSecrets }}
      imagePullSecrets:
        {{- range .Values.deployment.imagePullSecrets }}
        - name: {{ . }}
        {{- end }}
      {{- end }}
      containers:
        - image: {{ printf "%s:%s" (required "Image has to be provided" .Values.deployment.image) (required "Image tag has to be provided" .Values.deployment.tag) | quote }}
          name: {{ .Release.Name }}
          ports:
            - containerPort: {{ .Values.deployment.containerPort }}
              name: http
              protocol: TCP
          {{- if .Values.deployment.env }}
          env:
            {{- toYaml .Values.deployment.env | nindent 12 }}
          {{- end }}
          {{- if and .Values.deployment.sharedVolume .Values.deployment.sharedVolume.hostPath }}
          volumeMounts:
            - name: shared-volume
              mountPath: {{ required "mounthPath of the sharedVolume needs to be provided" .Values.deployment.sharedVolume.mountPath }}
          {{- end }}
      {{- if and .Values.deployment.sharedVolume .Values.deployment.sharedVolume.mountPath }}
      volumes:
        - name: shared-volume
          hostPath:
            path: {{ required "hostPath of the sharedVolume needs to be provided" .Values.deployment.sharedVolume.hostPath }}
            type: Directory
      {{- end }}
